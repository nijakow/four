--- /secure/object.c

/*
 * This is the basic object
 */

use $clone_instance;

void create()
{
}

any clone(...)
{
	any instance;
	
	instance = $clone_instance(this);
	instance->create(...);
	return instance;
}

--- /secure/master.c

use $log;
use $on_connect;

void receive(any connection)
{
	any conn_inst;
	$log("New connection!\n");
	conn_inst = "/secure/connection.c"->clone(connection);
	"/secure/program.c"->clone(conn_inst);
}

void create()
{
	$on_connect(this, "receive");
}

--- /secure/program.c

inherit "/secure/object.c";

any connection;

void sayhi(any text)
{
	connection->write(": ", text);
	connection->prompt(this::sayhi, "> ");
}

void create(any the_connection)
{
    connection = the_connection;
    connection->write("Program commencing...\n");
    connection->prompt(this::sayhi, "> ");
}

--- /secure/connection.c

inherit "/secure/object.c";

use $log;
use $write;
use $on_receive;
use $on_disconnect;

any port;
any func;

void prompt(any the_func, ...)
{
    func = the_func;
    write(...);
}

void write(...)
{
    while (va_count) {
        $write(port, va_next);
    }
}

void receive(any text)
{
    any _func;
    
    if (func) {
    	_func = func;
    	func = nil;
        _func(text);
    }
}

void handle_disconnect()
{
	$log("Disconnect!\n");
}

void create(any the_port)
{
	"/secure/object.c"::create();
	port = the_port;
	func = nil;
	$on_receive(port, this, "receive");
	$on_disconnect(port, this, "handle_disconnect");
}
